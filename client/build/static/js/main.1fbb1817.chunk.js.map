{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/common/PrivateRoute.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/taskReducer.js","reducers/index.js","store.js","components/Navbar.js","components/Tasks.js","components/Login.js","components/CreateTask.js","actions/taskActions.js","components/Task.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","connect","state","auth","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","isAuthenticated","to","initialState","user","task","combineReducers","arguments","length","undefined","action","objectSpread","isEmpty","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","e","preventDefault","this","_this$props$auth","className","id","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","onClick","onLogoutClick","bind","Tasks","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tasks","_this2","get","then","res","data","setState","catch","err","console","log","map","key","_id","username","email","text","concat","Login","password","onChange","assertThisInitialized","onSubmit","defineProperty","target","name","value","userLogin","nextProps","history","push","classnames","is-invalid","userData","post","setItem","jwt_decode","response","CreateTask","newTask","noValidate","clearErrors","Task","msg","getTaskById","match","params","updatedTaskData","updateTask","taskContent","jwtToken","currentTime","Date","now","exp","location","href","App","es","components_Navbar","from","exact","path","common_PrivateRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fbb1817.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\r\n\r\n// User login action\r\nexport const userLogin = (userData) => dispatch => {\r\n    axios.post('/login', userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n            const {token} = res.data;\r\n            // Set token to ls\r\n            localStorage.setItem('jwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set logged in user action\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n};\r\n\r\n// Logout user action\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('jwtToken');\r\n\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n\r\n    // Set current user to {}\r\n    dispatch(setCurrentUser({}));\r\n};","export const TEST_DISPATCH = 'TEST_DISPATCH';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const GET_TASK = 'GET_TASK';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({component: Component, auth, ...rest}) => (\r\n    <Route {...rest}\r\n           render={\r\n               props => auth.isAuthenticated === true ? <Component {...props}/> : <Redirect to=\"/login\"/>\r\n           }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import {\r\n    TEST_DISPATCH,\r\n    SET_CURRENT_USER,\r\n    GET_ERRORS\r\n} from '../actions/types';\r\nimport isEmpty from 'lodash.isempty';\r\n\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user:{}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case TEST_DISPATCH:\r\n            return{\r\n                ...state,\r\n                user:action.payload\r\n            };\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user:action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_ERRORS,CLEAR_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        case CLEAR_ERRORS:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_TASK, UPDATE_TASK} from '../actions/types';\r\n\r\nconst initialState = {\r\n    task: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_TASK:\r\n            return {\r\n                ...state,\r\n                task: action.payload\r\n            };\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                task: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport taskReducer from './taskReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    task: taskReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {logoutUser} from \"../actions/authActions\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    onLogoutClick(e) {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg\" id=\"siteNav\">\r\n                <div className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                     aria-controls=\"navbarNav\"\r\n                     aria-expanded=\"false\"\r\n                     aria-label=\"Toggle navigation\">\r\n                    <div className=\"toggle\">\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse pr-lg-3\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/dayside\" className=\"nav-link\">Dayside Viewer</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/tasks\" className=\"nav-link\">Tasks</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/create\" className=\"nav-link\">Create Task</Link>\r\n                        </li>\r\n\r\n                        {isAuthenticated ? <li className=\"nav-item\">\r\n                            <a className=\"nav-link page-link rounded\"\r\n                               onClick={this.onLogoutClick.bind(this)}>Logout</a>\r\n                        </li> : <li className=\"nav-item\">\r\n                            <Link to=\"/login\" className=\"nav-link page-link rounded\">Login</Link>\r\n                        </li>}\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutUser})(Navbar);\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {logoutUser} from \"../actions/authActions\";\r\n\r\n\r\nclass Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/tasks')\r\n            .then(res => {\r\n                const tasks = res.data;\r\n                this.setState({tasks});\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row pt-5\">\r\n                        <div className=\"col-6 offset-3\">\r\n                            <div className=\"list-group\">\r\n                                {this.state.tasks.map(task =>\r\n                                    <div key={task._id} className=\"list-group-item list-group-item-action\">\r\n                                        <div className=\"d-flex w-100 justify-content-between\">\r\n                                            <h5 className=\"mb-1 pr-3\">{task.username}</h5>\r\n                                            <small>{task.email}</small>\r\n                                        </div>\r\n                                        <p className=\"mb-1\">{task.text}</p>\r\n                                        <span className=\"d-block text-right mt-3\">\r\n                                            {isAuthenticated ?\r\n                                                <Link to={`/edit/${task._id}`}>\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </Link> : ''}\r\n                                        </span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTasks.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutUser})(Tasks);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {userLogin} from './../actions/authActions';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        };\r\n\r\n        this.props.userLogin(user);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push('/tasks')\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row pt-5\">\r\n                        <div className=\"col-6 offset-3\">\r\n                            <form onSubmit={this.onSubmit} className=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Username</label>\r\n                                    <input type=\"text\"\r\n                                           name=\"username\"\r\n                                           className={classnames('form-control', {\r\n                                               'is-invalid': errors.username\r\n                                           })}\r\n                                           onChange={this.onChange}\r\n                                           value={this.state.username}\r\n                                    />\r\n                                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Password</label>\r\n                                    <input type=\"password\"\r\n                                           name=\"password\"\r\n                                           className={classnames('form-control', {\r\n                                               'is-invalid': errors.password\r\n                                           })}\r\n                                           onChange={this.onChange}\r\n                                           value={this.state.password}\r\n                                    />\r\n                                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                                </div>\r\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Sign In</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    userLogin: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {userLogin})(Login)\r\n\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport classnames from 'classnames';\r\n\r\nclass CreateTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            text: '',\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newTask = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            text: this.state.text\r\n        };\r\n\r\n        axios.post('/create', newTask)\r\n            .then(res => {\r\n                this.setState({\r\n                    username: '',\r\n                    email: '',\r\n                    text: '',\r\n                    errors: {}\r\n                });\r\n                this.props.history.push('/tasks')\r\n            })\r\n            .catch(err => this.setState({errors: err.response.data}));\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n\r\n        return (\r\n                <div className=\"container\">\r\n                    <div className=\"row pt-5\">\r\n                        <div className=\"col-6 offset-3\">\r\n                            <form onSubmit={this.onSubmit} noValidate>\r\n                                <div className=\"form-group\">\r\n                                    <label>Name</label>\r\n                                    <input type=\"text\"\r\n                                           name=\"username\"\r\n                                           className={classnames('form-control', {\r\n                                               'is-invalid': errors.username\r\n                                           })}\r\n                                           onChange={this.onChange}\r\n                                           value={this.state.username}\r\n                                    />\r\n                                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email</label>\r\n                                    <input type=\"email\"\r\n                                           name=\"email\"\r\n                                           className={classnames('form-control', {\r\n                                               'is-invalid': errors.email\r\n                                           })}\r\n                                           onChange={this.onChange}\r\n                                           value={this.state.email}/>\r\n                                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Task</label>\r\n                                    <textarea name=\"text\"\r\n                                              className={classnames('form-control', {\r\n                                                  'is-invalid': errors.text\r\n                                              })}\r\n                                              onChange={this.onChange}\r\n                                              value={this.state.text}/>\r\n                                    {errors.text && (<div className=\"invalid-feedback\">{errors.text}</div>)}\r\n                                </div>\r\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Create</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateTask;\r\n","import axios from 'axios';\r\nimport {GET_ERRORS,CLEAR_ERRORS, UPDATE_TASK, GET_TASK} from \"./types\";\r\n\r\n// Get task by id\r\nexport const getTaskById = id => dispatch => {\r\n    axios.get(`/edit/${id}`)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_TASK,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: null\r\n            })\r\n        )\r\n};\r\n\r\n// Update task\r\nexport const updateTask = (updatedTaskData, id) => dispatch => {\r\n    dispatch(clearErrors());\r\n    axios.post(`/edit/update/${id}`, updatedTaskData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: UPDATE_TASK,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        )\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport {getTaskById} from \"../actions/taskActions\";\r\nimport {updateTask} from \"../actions/taskActions\";\r\n\r\nclass Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            text: '',\r\n            msg: '',\r\n            errors: {},\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getTaskById(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n\r\n        if (nextProps.task.task) {\r\n            const task = nextProps.task.task;\r\n            this.setState({\r\n                username: task.username,\r\n                email: task.email,\r\n                text: task.text,\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const id = this.props.match.params.id;\r\n\r\n        const updatedTaskData = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            text: this.state.text,\r\n        };\r\n\r\n        this.props.updateTask(updatedTaskData, id);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n\r\n        let taskContent = (\r\n            <form onSubmit={this.onSubmit} noValidate>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\"\r\n                           name=\"username\"\r\n                           className={classnames('form-control', {\r\n                               'is-invalid': errors.username\r\n                           })}\r\n                           onChange={this.onChange}\r\n                           value={this.state.username}\r\n                    />\r\n                    {errors.username && (<div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\"\r\n                           name=\"email\"\r\n                           className={classnames('form-control', {\r\n                               'is-invalid': errors.email\r\n                           })}\r\n                           onChange={this.onChange}\r\n                           value={this.state.email}\r\n                    />\r\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Task</label>\r\n                    <textarea name=\"text\"\r\n                              className={classnames('form-control', {\r\n                                  'is-invalid': errors.text\r\n                              })}\r\n                              onChange={this.onChange}\r\n                              value={this.state.text}/>\r\n                    {errors.text && (<div className=\"invalid-feedback\">{errors.text}</div>)}\r\n                </div>\r\n                <button className=\"btn btn-primary btn-block\" type=\"submit\">Edit Task</button>\r\n            </form>\r\n        );\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row pt-5\">\r\n                    <div className=\"col-6 offset-3\">\r\n                        {taskContent}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTask.propTypes = {\r\n    getTaskById: PropTypes.func.isRequired,\r\n    updateTask: PropTypes.func.isRequired,\r\n    task: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    task: state.task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {getTaskById, updateTask})(Task);\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport {setCurrentUser} from \"./actions/authActions\";\n\nimport PrivateRoute from './components/common/PrivateRoute';\n\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nimport Navbar from './components/Navbar';\nimport Tasks from './components/Tasks';\nimport Login from './components/Login';\nimport CreateTask from './components/CreateTask';\nimport Task from './components/Task';\n\nimport { logoutUser } from './actions/authActions';\n\nimport './App.css';\n\n// Check for token\nif (localStorage.jwtToken) {\n    // Set Auth token header auth\n    setAuthToken(localStorage);\n\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(localStorage.jwtToken);\n\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n\n    // Check for expired token\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        // Logout user\n        store.dispatch(logoutUser());\n        // Redirect to login\n        window.location.href = '/tasks';\n    }\n}\n\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <main className=\"App\">\n                    <Navbar/>\n                    <Redirect from='/' to='/tasks'/>\n                    <Route exact path=\"/tasks\" component={Tasks}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/create\" component={CreateTask}/>\n                    <Switch>\n                        <PrivateRoute exact path=\"/edit/:id\" component={Task}/>\n                        <PrivateRoute exact path=\"/edit\" component={Task}/>\n                    </Switch>\n                </main>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}